#include <stdio.h>
#include <time.h>
#include <stdint.h>
#include <vector>

using namespace std;

long long fibonacci_recursive(int term) {
    if (term == 0) return 0;
    if (term == 1) return 1;
    return fibonacci_recursive(term - 1) + fibonacci_recursive(term - 2);
}

vector<long long> compute_fib_sequence_recursive(int terms_count) {
    vector<long long> sequence;
    int i = 1;
    while (i < terms_count) {
        sequence.push_back(fibonacci_recursive(i));
        i++;
    }
    return sequence;
}

long long fibonacci_iterative(int term) {
    if (term == 0) return 0;
    if (term == 1) return 1;

    long long prev = 1;
    long long prev_prev = 0;
    long long curr;

    int i = 2;
    while (i <= term) {
        curr = prev + prev_prev;
        prev_prev = prev;
        prev = curr;
        i++;
    }

    return curr;
}

vector<long long> compute_fib_sequence_iterative(int terms_count) {
    vector<long long> sequence;
    int i = 1;
    while (i < terms_count) {
        sequence.push_back(fibonacci_iterative(i));
        i++;
    }
    return sequence;
}

// ... rest of the code remains the same ...

