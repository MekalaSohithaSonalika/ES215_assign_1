import time

def multiply_matrices_loop(A, B):
  """
  Multiplies matrices A and B using nested loops.

  Args:
    A: A NumPy array representing the first matrix.
    B: A NumPy array representing the second matrix.

  Returns:
    A NumPy array representing the result of the multiplication (C).
  """
  N = len(A)
  C = np.zeros((N, N), dtype=np.int32)
  for i in range(N):
    for j in range(N):
      for k in range(N):
        C[i, j] += A[i, k] * B[k, j]
  return C

N = 1024  # Change this for different sizes: 64, 128, 256, 512, 1024
A = np.random.randint(100, size=(N, N), dtype=np.int32)
B = np.random.randint(100, size=(N, N), dtype=np.int32)

start_time = time.time()

# Multiply matrices using loop (for educational purposes, not recommended)
C = multiply_matrices_loop(A, B)

end_time = time.time()

print(f"Time taken for multiplication of {N}x{N} matrix (using loop): {end_time - start_time} seconds")
